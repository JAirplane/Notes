@using System.Timers
@using System.ComponentModel.DataAnnotations
@layout LoginLayout
@page "/"

<PageTitle>Login</PageTitle>

	<div class="login-form">
			<EditForm Model="credentials" OnValidSubmit="SendCredentials">
				<DataAnnotationsValidator />
				<h2 class="text-center">@LoginHeader</h2>
				<div class="form-group">
					<InputText class="form-control" placeholder="@UsernamePlaceholder" @bind-Value="credentials.LoginInput" />
					<ValidationMessage For="(() => credentials.LoginInput)" />
				</div>
				<div class="form-group">
					<InputText class="form-control" placeholder="@PasswordPlaceholder" @bind-Value="credentials.PasswordInput" />
					<ValidationMessage For="(() => credentials.PasswordInput)" />
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-block">@ButtonTitle</button>
				</div>
				<div class="clearfix">
					<label class="float-left form-check-label"><input type="checkbox"> Remember me</label>
					<a href="#" class="float-right">Forgot Password?</a>
				</div>
			</EditForm>
		<p class="text-center"><a href="#">Create an Account</a></p>
	</div>


<a href="/main">Go to main page</a>

@code{
	[Parameter]
	public string UsernamePlaceholder { get; set; } = "Username";
	[Parameter]
	public string PasswordPlaceholder { get; set; } = "Password";
	[Parameter]
	public string LoginHeader { get; set; } = "Login";
	[Parameter]
	public string ButtonTitle { get; set; } = "Log in";

	Credentials credentials = new();

	protected override void OnInitialized()
	{
		
	}
	void SendCredentials()
	{

	}
}
