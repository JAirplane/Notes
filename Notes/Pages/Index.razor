@page "/main/{UserId:int}"
@inject UserAuthenticationState authState

<PageTitle>Index</PageTitle>

@if(!authState.UserLoggedIn)
{
	<NotAuthorizedForm />
}
else
{
	<h1 class="text-center">Your notes</h1>
	<div class="note-container">
			@foreach(Note_VM note in handler_VM?.GetUserNotes() ?? [])
			{
				<NoteCard NoteId=@note.Id CardHeader=@note.Header CardText=@note.Body Tags=@note.NoteTags OnDeleteNote="handler_VM.DeleteUserNote"/>
			}
	</div>
}


@code{
	[CascadingParameter]
	public MainLayout? mainLayout { get; set; }
	[Parameter]
	public int UserId { get; set; }

	private AuthenticatedUserHandler_VM? _handler_VM;
	[Inject]
	public AuthenticatedUserHandler_VM handler_VM
	{
		get => _handler_VM ?? throw new Exception("AuthenticatedUserHandler_VM is null");
		set => _handler_VM = value ?? throw new Exception("AuthenticatedUserHandler_VM is null");
	}

	protected override void OnParametersSet()
	{
		if(mainLayout is not null)
		{
			mainLayout.MainPageLink = $"/main/{UserId}";
		}
	}
}
