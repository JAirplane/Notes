
<div class="modal fade show" id="editModal" style="display:block;" aria-modal="true" role="dialog">
	<div class="modal-dialog modal-dialog-scrollable">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">@ModalTitle</h5>
				<button type="button" class="btn-close" @onclick="CloseModal"></button>
			</div>
			<div class="modal-body">
				<InputText @bind-Value=NoteHeader />
				<InputTextArea @bind-Value=NoteText />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" @onclick="CloseModal">@LeftFooterButtonTitle</button>
				<button type="button" class="btn btn-primary" @onclick=@(async () => await OnSaveChanges.InvokeAsync(new NoteContent(NoteHeader, NoteText)))>@RightFooterButtonTitle</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public string ModalTitle { get; set; } = "Edit note";
	[Parameter]
	public string NoteHeader { get; set; } = string.Empty;
	[Parameter]
	public string NoteText { get; set; } = string.Empty;
	[Parameter]
	public string LeftFooterButtonTitle { get; set; } = "Close";
	[Parameter]
	public string RightFooterButtonTitle { get; set; } = "Close";
	[Parameter]
	public EventCallback<bool> OnClose { get; set; }
	[Parameter]
	public EventCallback<NoteContent> OnSaveChanges { get; set; }

	private Task CloseModal()
	{
		return OnClose.InvokeAsync(false);
	}
}
