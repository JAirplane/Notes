
<div class="modal fade" id=@ModalId tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-scrollable">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="modalLabel">@ModalTitle</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<InputText @bind-Value=NoteHeader/>
				<InputTextArea @bind-Value=NoteText />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" @onclick=SaveChangesAsync>Save changes</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public string ModalId { get; set; } = string.Empty;
	[Parameter]
	public string ModalTitle { get; set; } = "Edit note";
	[Parameter]
	public string NoteHeader { get; set; } = string.Empty;
	[Parameter]
	public string NoteText { get; set; } = string.Empty;
	[Parameter]
	public EventCallback<Tuple<string, string>> OnSaveChanges { get; set; }

	async Task SaveChangesAsync()
	{
		var changes = Tuple.Create(NoteHeader, NoteText);
		await OnSaveChanges.InvokeAsync(changes);
	}
}
