
<div class="modal fade show" id="editModal" style="display:block; background-color: rgba(10,10,10,.7);"
	aria-modal="true" role="dialog" @onclick="CloseModal">
	<div class="modal-dialog modal-dialog-scrollable" @onclick:stopPropagation>
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">@ModalTitle</h4>
				<button type="button" class="btn-close" @onclick="CloseModal"></button>
			</div>
			<div class="modal-body">
				<div class="row">
					<p class="mb-1">@InputHeader</p>
					<div class="input-group">
						<div class="input-group-prepend">
							<span class="input-group-text">#</span>
						</div>
						<InputText id="tagInput" @bind-Value=TagName />
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" @onclick="CloseModal">@LeftFooterButtonTitle</button>
				<button type="button" class="btn btn-primary" @onclick="SaveChanges">@RightFooterButtonTitle</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public string ModalTitle { get; set; } = "Edit tag";
	[Parameter]
	public string InputHeader { get; set; } = "Tag name:";
	[Parameter]
	public string TagName { get; set; } = string.Empty;
	[Parameter]
	public string LeftFooterButtonTitle { get; set; } = "Close";
	[Parameter]
	public string RightFooterButtonTitle { get; set; } = "Save changes";
	[Parameter]
	public EventCallback<bool> OnClose { get; set; }
	[Parameter]
	public EventCallback<string> OnSaveChanges { get; set; }

	private async Task CloseModal()
	{
		await OnClose.InvokeAsync(false);
	}
	private async Task SaveChanges()
	{
		await OnSaveChanges.InvokeAsync(TagName);
	}
}
