
<div class="login-form">
	<EditForm Model=@resetCode OnValidSubmit="ChangePassword">
		<DataAnnotationsValidator />
		<h2 class="text-center">@FormHeader</h2>
		<div>
			<p>@FormMessage</p>
		</div>
		@if(resetCode is not null)
		{
			<div class="form-group">
				<label for="email-send">@CodeFieldLabelMessage</label>
				<InputNumber class="form-control" id="email-send" placeholder="@CodePlaceholder" @bind-Value="resetCode.EmailCodeInput" />
				<ValidationMessage For="(() => resetCode.EmailCodeInput)" />
			</div>
		}
		<div class="form-group">
			<button type="submit" class="btn btn-primary btn-block">@SubmitButtonTitle</button>
		</div>
	</EditForm>
</div>

@code {
	[Parameter]
	public int EmailCode { get; set; }
	[Parameter]
	public string FormHeader { get; set; } = "Email Code";
	[Parameter]
	public string FormMessage { get; set; } = "Enter code from Email to reset your password";
	[Parameter]
	public string CodeFieldLabelMessage { get; set; } = "Code";
	[Parameter]
	public string CodePlaceholder { get; set; } = "1111";
	[Parameter]
	public string SubmitButtonTitle { get; set; } = "Submit";

	[Parameter]
	public PasswordResetCode? resetCode { get; set; }
	[Parameter]
	public EventCallback<bool> OnCorrectCodeInput{ get; set; }

	virtual public void ChangePassword()
	{
		OnCorrectCodeInput.InvokeAsync();
	}
}
