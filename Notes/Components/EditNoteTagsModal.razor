@using System.Timers

<div class="modal fade show" id="editModal" style="display:block; background-color: rgba(10,10,10,.7);"
	 aria-modal="true" role="dialog" @onclick="CloseModal">
	<div class="modal-dialog modal-dialog-scrollable" @onclick:stopPropagation>
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">@ModalTitle</h4>
				<button type="button" class="btn-close" @onclick="CloseModal"></button>
			</div>
			<div class="modal-body modal-min-heigth">
				<SearchElement OnSearchHandler="OnTagSearch" OnChoiceMade="OnChoiceMade" OnCreateNewElement="OnConfirm">
					<ResultTemplate>
						@context.TagName
					</ResultTemplate>
				</SearchElement>
				<hr />
				<div class="tag-delete-container">
					@foreach(var tag in NoteTags ?? [])
					{
						<div class="tag-modal-inline">
							<div class="tag-name">@tag.TagName</div>
							<button type="button" class="btn btn-outline-danger tag-delete-button" @onclick="() => OnTagUnbind.InvokeAsync(tag)">
								<i class="fa-solid fa-minus"></i>
							</button>
						</div>
					}
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" @onclick="CloseModal">@FooterButtonTitle</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public string ModalTitle { get; set; } = "Edit note tags";
	[Parameter]
	public string FooterButtonTitle { get; set; } = "Close";
	[Parameter]
	public IEnumerable<Tag_VM>? NoteTags { get; set; }
	[Parameter]
	public EventCallback<bool> OnClose { get; set; }
	//OnConfirm invokes if nothing was found and you click confirm button
	[Parameter]
	public EventCallback<string> OnConfirm { get; set; }
	//OnTagChosen do something with chosen element
	[Parameter]
	public EventCallback<Tag_VM> OnChoiceMade { get; set; }
	[Parameter]
	public EventCallback<Tag_VM> OnTagUnbind { get; set; }
	[Parameter]
	public Func<string, IEnumerable<Tag_VM>>? OnSearchHandler { get; set; }

	private async Task CloseModal()
	{
		await OnClose.InvokeAsync(false);
	}
	private IEnumerable<Tag_VM>? OnTagSearch(string searchName)
	{
		if (OnSearchHandler is not null)
		{
			return OnSearchHandler.Invoke(searchName);
		}
		return null;
	}

}
